Componentes

1. Django:

O que é: Django é um framework web em Python que facilita o desenvolvimento de aplicações web robustas
e escaláveis. Ele inclui um ORM (Object-Relational Mapping) para interagir com bancos de dados
um sistema de templates, e muitas outras funcionalidades.

Papel: Serve como o backend da sua aplicação, gerenciando a lógica de negócios,
interações com o banco de dados, e servindo APIs para o frontend.

2. nginx:

O que é: nginx é um servidor web e proxy reverso. Ele pode servir arquivos estáticos (como HTML, CSS, JS)
e encaminhar solicitações para servidores de aplicação como o Gunicorn (que serve o Django).

Papel: Serve como um proxy reverso para o servidor Django, servindo arquivos estáticos diretamente
e encaminhando outras solicitações para o Django.

3. Gunicorn:

O que é: Gunicorn é um servidor WSGI para aplicações Python. Ele serve a aplicação Django e lida
com solicitações HTTP.

Papel: Serve a aplicação Django e processa solicitações HTTP antes de passá-las para o Django.

4. Banco de Dados:

O que é: Pode ser PostgreSQL, MySQL, SQLite, etc. Django pode se conectar a vários tipos de bancos de dados.
Papel: Armazena dados persistentes da aplicação. Django usa o ORM para interagir com o banco de dados.

5. Vanilla JavaScript:

O que é: JavaScript puro, sem frameworks adicionais.
Papel: Serve como o frontend da sua aplicação, interagindo com o backend Django via APIs.