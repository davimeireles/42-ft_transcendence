services:  
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/var/www/html
    ports:
      - "443:443"
    depends_on:
      - backend
      - postgres
    networks:
      - app_network
    
  postgres:
    image: postgres:13
    container_name: postgres
    env_file:
      - .env
    volumes:
      - db-postgres:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    build:
      context: ./sources
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - UID=${UID}
      - SECRET=${SECRET}
      - URI=${URI}
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    networks:
      - app_network

  grafana:
    image: docker.io/grafana/grafana-oss:11.5.1
    container_name: grafana
    depends_on:
      - prometheus
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning:ro

    restart: unless-stopped

  prometheus:
    image: docker.io/prom/prometheus:v3.1.0
    container_name: prometheus
    ports:
      - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter
    container_name: node_exporter
    pid: host
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|run/user)($$|/)"

networks:
  app_network:
    name: app_network
    driver: bridge

volumes:
  db-postgres:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
